import pygamefrom boat import Boatfrom polar import polar_functionHEIGHT = 600WIDTH = 1000def central_rotation(image, angle, xc, yc):    rotated_image = pygame.transform.rotate(image, angle)    rot_rect = rotated_image.get_rect(        center=image.get_rect(center=(xc, yc)).center)    return rotated_image, rot_rectvrPolar = polar_function("polar.pol")pygame.init()screen = pygame.display.set_mode((WIDTH, HEIGHT))screen.fill((0, 128, 255))done = Falseboat = Boat('1', WIDTH - 800, HEIGHT - 500, 45, vrPolar)buoy_img = pygame.image.load('images/buoy.png')buoy_img = pygame.transform.scale(buoy_img, (20, 32))objective = [300, 200]starboard_img = pygame.image.load('images/blueStarboard.png')starboard_img = pygame.transform.rotate(starboard_img, -45)port_img = pygame.image.load('images/bluePort.png')port_img = pygame.transform.rotate(port_img, 45)clock = pygame.time.Clock()while not done:    for event in pygame.event.get():        if event.type == pygame.QUIT:            done = True    pressed = pygame.key.get_pressed()    if pressed[pygame.K_LEFT]:        if boat.bearing == 0:            boat.bearing = 359        else:            boat.bearing -= 1    if pressed[pygame.K_RIGHT]:        if boat.bearing == 359:            boat.bearing = 0        else:            boat.bearing += 1    screen.fill((0, 128, 255))    if boat.bearing < 180:        img = port_img    else:        img = starboard_img    rot_img, new_rect = central_rotation(img, -boat.bearing, WIDTH - boat.x, HEIGHT - boat.y)    screen.blit(rot_img, new_rect.topleft)    screen.blit(buoy_img, objective)    pygame.display.flip()    if boat.is_arrived([WIDTH-objective[0], HEIGHT-objective[1]]):        done = True        print(f'Boat {boat.name} has arrived at its objective')    clock.tick(80)    boat.update_position()pygame.quit()print("Game terminated")